<?xml version="1.0" ?>

<project name="common-targets">
  <loadtasks assembly=".\tools\stylecopcmd\StyleCopCmd.Core.dll"/>

  <property name="dir.root" value="${path::get-full-path('.')}" overwrite="false"  />
  <property name="dir.tools" value="${dir.root}/tools" />
  <property name="exe.nunit" value="${dir.tools}/nunit/nunit-console-x86.exe" />
  <property name="dir.build" value="${dir.root}/build" />
  <property name="dir.tests" value="${dir.build}/tests/" />
  <property name="dir.results" value="${dir.build}/results/" />
  <property name="dir.tests.bin" value="${dir.build}/tests/bin/" />
  <property name="dir.pub" value="${dir.build}/published" />
  <property name="dir.pub.bin" value="${dir.pub}/bin/" />
  <property name="msbuild" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />

  <target name="common.clean">
    <delete dir="${dir.build}" if="${directory::exists(dir.build)}" />  
  </target>

  <target name="common.init">
    <mkdir dir="${dir.build}" />
    <mkdir dir="${dir.tests}" />
    <mkdir dir="${dir.results}" />
    <tstamp>
      <formatter property="date" pattern="yyyyMMdd-HHmm" />
    </tstamp>  
  </target>
  
	<target name="common.compile">
		<property name="msbuild.targets" value="clean;rebuild" />
    <property name="dir.out" value="${dir.tests}" />
    <property name="dir.out.bin" value="${dir.tests.bin}" />
    
		<exec program="${msbuild}"
				  commandline="${file.solution} /t:${msbuild.targets} /v:m
                  			/p:WebProjectOutputDir=${dir.out} 
                        /p:OutDir=${dir.out.bin}
                        /m"
				  workingdir="." />
	</target>

	<target name="common.publish">
    <property name="dir.out" value="${dir.pub}" />
    <property name="dir.out.bin" value="${dir.pub.bin}" />
		<exec program="${msbuild}"
			  commandline="${file.project} /t:ResolveReferences;_CopyWebApplication
        				/p:WebProjectOutputDir=${dir.out}
        				/p:OutDir=${dir.out.bin}
                /m"
			  workingdir="." />
	</target>

  <target name="common.test">
     <property name="project.name" value="${project::get-name()}" overwrite="false" />
     <exec program="${exe.nunit}">
       <arg path="${dir.tests.bin}/${assembly.tests}" />
       <arg value="/xml:${dir.results}/TestResults.xml" />
       <arg value="/noshadow" />
       <arg value="/nologo" />
       <arg value="/nothread" />
       <arg value="/domain=Multiple" />
       <arg value="/process=Single" />
       <arg value="/framework=${nant.settings.currentframework}" />
     </exec>
  </target>

  <target name="common.zip">
    <property name="env" value="" overwrite="false" /> 
    <property name="file.zipname"
				  value="${dir.pub}/${project::get-name()}-${env}-${date}.zip"
				  overwrite="false"  />
    <zip zipfile="${file.zipname}"
			 includeemptydirs="true">
      <fileset basedir="${dir.pub}">
        <include name="**" />
      </fileset>
    </zip>
  </target>

  <target name="common.fxcop">
    <property name="exe.fxcop" value="${dir.tools}/fxcop/fxcopcmd.exe" overwrite="false" />
    <property name="file.fxcop.in" value="${dir.root}/Settings.fxcop" overwrite="false" />
    <property name="file.fxcop.out" value="${dir.results}FxCopReport.xml" overwrite="false"  />
    <exec program="${exe.fxcop}">
      <arg value="/p:${file.fxcop.in}"/>
      <arg value="/o:${file.fxcop.out}"/>
    </exec>
    <echo message="##teamcity[importData type='FxCop' path='${file.fxcop.out}']" />
  </target>

  <target name="common.stylecop">
    <property name="file.stylecop.out" value="${dir.results}/StyleCopReport.xml" overwrite="false" />
    <property name="dir.stylecopcmd" value="${dir.tools}/stylecopcmd/" />
    <styleCopCmd outputXmlFile="${file.stylecop.out}"
         transformFile="${dir.stylecopcmd}\StyleCopReport.xsl"
         processorSymbols="RELEASE,CODE_ANALYSIS"
         ignorePatterns="AssemblyInfo\.cs,GlobalSuppressions\.cs"
         styleCopSettingsFile="${dir.root}/Settings.StyleCop">
      <solutionFiles>
        <include name="${file.solution}" />
      </solutionFiles>
      <addinDirectories>
        <include name="${dir.stylecopcmd}" />
      </addinDirectories>
    </styleCopCmd>
  </target>

  <target name="common.ndepend">
    <exec program="${dir.tools}\ndepend\NDepend.Console.exe">
      <arg value="${dir.root}\Settings.NDepend.xml" />
    </exec>
  </target>
</project>
